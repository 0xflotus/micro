name: Windows CI Profile
on: [push]

jobs:

  test:
    name: Windows integration tests
    runs-on: windows-latest
    env: 
      DOCKER_BUILDKIT: '0'
      DOCKER_CLI_EXPERIMENTAL: 'enabled'
    steps:

    - name: Set up Go 1.15
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
      id: go

    - name: Check out code
      uses: actions/checkout@v2

    - name: Install Protoc
      uses: arduino/setup-protoc@master

    - name: Install Protoc Gen Micro
      working-directory: ./cmd/protoc-gen-micro
      run: go install

    - name: Install Protoc Gen Go
      run: go get -u github.com/golang/protobuf/protoc-gen-go

    - name: Replace CI profile
      id: replace-profile
      run: |
        go mod edit -replace github.com/micro/micro/plugin/etcd/v3=./plugin/etcd
        go mod edit -replace github.com/micro/micro/profile/ci/v3=./profile/ci
        go mod edit -replace google.golang.org/grpc=google.golang.org/grpc@v1.26.0

    # Install micro binary and then build micro with the profile inside a tmp directory. We do this
    # to not alter the original go.mod & go.sum, which the test services reference directly with 
    # replace statements. TODO: find a simpler way of achieving this.
    - name: Install micro
      id: install-micro
      run: |
        go install
        micro -v
        $Env:Path = "$HOME\go\bin;$Env:Path"
        micro -v
        $out=$pwd.Path+"\micro"
        mkdir C:\micro_tmp
        cp -R .\* C:\micro_tmp
        cd C:\micro_tmp
        micro init --profile=ci --output=profile.go
        $env:GOOS = 'windows'; $env:GOARCH = 'amd64'; $env:CGO_ENABLED = '0'; go build -o $out
    
    # This sets up a local docker registry to push and pull our test docker image so that we can persist 
    # Based on https://dev.to/dtinth/caching-docker-builds-in-github-actions-which-approach-is-the-fastest-a-research-18ei
    - name: Setup docker caching
      id: cache-docker
      uses: actions/cache@v2
      with:
        path: /tmp/docker-registry
        key: docker-registry-int-${{ steps.get-date.outputs.date }}
    - name: Build docker image
      run: |
        docker build -f test/Dockerfile . -t micro

    - name: Check out services
      uses: actions/checkout@v2
      with:
        repository: 'micro/services'
        path: 'test/services'

    - name: Delete go mod
      working-directory: ./test
      run: |
        rm ./services/go.mod
        rm ./services/go.sum
        rm -rf ./services/.git
  
    - name: Replace paths
      working-directory: ./test/services
      run: |
        grep -rl github.com/micro/services . | xargs sed -i 's/github.com\/micro\/services/github.com\/micro\/micro\/v3\/test\/services/g'

    - name: Test micro server
      working-directory: ./test
      env:
        GITHUB_PAT: ${{ secrets.MICRO_ACTIONS_PAT }}
        GITLAB_PAT: ${{ secrets.GITLAB_PAT }}
      run: |
        go clean -testcache && go test --tags=integration -v -run ./... -timeout 20m
